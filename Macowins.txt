
// Local

class Local {
var property ventas = [];
method ventasDiarias(fecha) = self.ventas.filtrer { venta => venta.fechaDeVenta() == fecha};
method valorDeVentaDiaria(fecha){
return self.ventasDiarias(fecha).sum(venta => venta.importe())
}
method vender(venta)= ventas.add(venta);
}


//venta

class Venta {
    const property prendasVendidas = {};
    const property  fechaDeVenta;
    const property metodoDeVenta; 
   method precioFinal() = prendasVendidas.sum { prenda => prenda.precio() }
}



class VentaConTarjeta inherits venta {
const property cantidadDeCuotas;
const property coeficiente;
method importe() = {
const recargo = self.cantidadDeCuotas() * self.coeficiente() + self.importeFinal()*0,01;
return super() + recargo; // busca importe en la superclase venta y le suma el recargo de la subclase VentaTarjeta
}}
object VentaConEfectivo inherits venta { }

// Prendas
class Prenda {
  const property precioBase;
  const property tipo; // sacos, camisa y pantalones
  method precio();

}


class PrendaEnLiquidacion inherits Prenda {
  override method precio () = self.precioBase() * 0,5;
}


class PrendaNueva inherits Prenda {}

Class PrendaEnPromocion inherits Prenda{
    var property montoFijo
    override method precio () = self.precioBase() - self.montoFijo() ;
}



